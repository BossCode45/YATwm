#+TITLE: YATwm
#+OPTIONS: \n:t
* This config is best read in emacs!

* Disclaimer: This is still very much in beta
This only just works, multiple monitors aren't supported and floating windows cannot move and there is no resizing. Many features are just hacked together and are likely to break. However, it is just about usable so if you really want to try then go for it! (feel free to make an issue if you have any questions).

* Usage instructions
** Installation
*** Pre reqs
- ~Xlib~ and ~g++~ to build the program
- ~Xephyr~ for the test script
- ~rofi~, ~alacritty~, ~picom~, ~feh~, ~polybar~, ~qutebrowser~ and ~i3lock~ for the default config
	- The current default config is currently just the configuration that I want to use (this will likely change)
*** Installing and removing
- ~make i~ or ~make install~ to install
- ~make r~ or ~make remove~ to remove
- ~./test~ to test
** Config
The current default config is just my config.
*** Startup
Add a bash command to the ~startup~ string array in config.h and it will execute on startup.
*** General
You can change either the inner gaps (padding around each window - so double it for space between windows), or the outer gaps (padding around the display - add to inner gaps to get space between window and screen edges).
They can be changed with the integers ~gaps~ and ~outerGaps~ in the config.h file.

You can change the number of workspaces by editing ~numWS~ in the config.h file, and the names by editing ~workspaceNames~. You can think of workspaces as virtual desktops.
*** Keybinds
Current keybinds (these can all be edited): 
- ~mod + e~					: exit
- ~mod + enter~				: alacritty
- ~mod + d~					: rofi
- ~mod + t~					: change next tile direction
- ~mod + q~					: quit focused window
- ~mod + c~					: qutebrowser
- ~mod + x~					: lock
- ~mod + shift + x~			: lock and sleep
- ~mod + direction~			: change focus in direction
- ~mod + shift + direction~	: move window in direction (currently not incredibly well implemented)
- ~mod + (num)~				: switch to workspace (num) - currently only for 1-10 but you can add more
- ~mod + shift + (num)~		: move window to workspace (num) - currently only for 1-10 but you can add more
(mod is super, and the direction keys are h, j, k, l - left, down, up, right respectively like vim)

To add new keybinds create a new entry in the keybind array:
#+begin_src cpp
{modifiers,		key,			command,		{commandArgs}},
#+end_src
e.g.
#+begin_src cpp
{MOD|SHIFT,		XK_l,			wMove,			{.dir = Right}},
#+end_src
Commands are executed going down the list and multiple commands with the same keybind and modifiers will all be executed

* Credits
Catwm (https://github.com/pyknite/catwm)

basic_wm (https://github.com/jichu4n/basic_wm)
